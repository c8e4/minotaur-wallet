name: Build for All platforms
on:
  push:
    tags:
      - 'v*.*.*'
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main

jobs:
  release-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Remove old package-lock file
        run: rm package-lock.json

      - name: install correct version of typeorm
        run: npm i -s typeorm@0.2.38

      - name: Install app dependencies
        run: npm install

      - name: Build Minotaur JS app and update capacitor
        run: CI=false npm run sync

      - name: Build Electron
        working-directory: ./electron
        run: CI=false; npm i; npm run build; npm run electron:pack; npm run electron:make

      - name: Upload Executable File to release
        uses: softprops/action-gh-release@v1
        with:
          files: electron/dist/minotaur-wallet*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
  release-mac:
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Remove old package-lock file
        run: rm package-lock.json

      - name: install correct version of typeorm
        run: npm i -s typeorm@0.2.38

      - name: Install app dependencies
        run: npm install

      - name: Build Minotaur JS app
        run: CI=false npm run sync

      - name: Build Electron
        working-directory: ./electron
        run: CI=false; npm i; npm run build; npm run electron:pack; npm run electron:make

      - name: Upload Executable File to release
        uses: softprops/action-gh-release@v1
        with:
          files: electron/dist/minotaur-wallet*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
  release-windows:
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Remove old package-lock file
        run: rm package-lock.json

      - name: install correct version of typeorm
        run: npm i -s typeorm@0.2.38

      - name: Install app dependencies
        run: npm install

      - name: Build Minotaur JS app
        run: $env:CI=$false; npm run sync

      - name: Build Electron
        working-directory: ./electron
        run: $env:CI=$false; npm i; npm run build; npm run electron:pack; npm run electron:make

      - name: Upload Executable File to release
        uses: softprops/action-gh-release@v1
        with:
          files: electron/dist/minotaur-wallet*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
  release-android:
    name: Release Apk for android
    runs-on: ubuntu-latest
    steps:
      - name: Get current tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: install correct version of typeorm
        run: npm i -s typeorm@0.2.38

      - name: Install app dependencies
        run: npm install

      - name: Build Minotaur JS app
        run: CI=false npm run sync

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'android/keystore/release.jks'
          encodedString: ${{ secrets.SIGNING_KEYSTORE }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./android/gradlew

      - name: Setup Android build environment
        uses: android-actions/setup-android@v2.0.2

      - name: Build app bundle
        working-directory: android
        run: ./gradlew clean app:assembleRelease

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEYSTORE }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: move apk to root directory
        run: mv ${{steps.sign_app.outputs.signedReleaseFile}} minotaur-wallet-`echo $RELEASE_VERSION | cut -c 2-100`.apk && ls

      - name: Upload Apk File to release
        uses: softprops/action-gh-release@v1
        with:
          files: minotaur-wallet-`echo $RELEASE_VERSION | cut -c 2-100`.apk
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
